name: Build and Release

on:
  push:
    tags:
       - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Rust
      uses: actions/setup-rust@v1
      with:
        rust-version: stable

    - name: Install dependencies (Linux/macOS only)
      if: runner.os != 'Windows'
      run: |
        if [[ "$RUNNER_OS" == "Linux" ]]; then
          sudo apt-get update
          sudo apt-get install -y build-essential
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          brew install build-essential
        fi

    - name: Install dependencies (Windows only)
      if: runner.os == 'Windows'
      run: |
        # PowerShell script for Windows
        Write-Host "Installing dependencies for Windows..."
        # Add any Windows-specific steps you need here.
        # Example: winget install <package-name>

    - name: Build the project
      run: cargo build --release

    - name: Run tests (optional)
      run: cargo test

    - name: Create release artifact
      run: |
        dist build --release --target $RUNNER_OS --output-format=json
        echo "Artifacts created successfully"

    - name: Upload release artifacts
      uses: actions/upload-artifact@v2
      with:
        name: my-release-artifacts
        path: target/release/*
